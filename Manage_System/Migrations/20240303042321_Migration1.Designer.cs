// <auto-generated />
using System;
using Manage_System.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManageSystem.Migrations
{
    [DbContext(typeof(ManageSystem1640Context))]
    [Migration("20240303042321_Migration1")]
    partial class Migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Manage_System.models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("commentDate");

                    b.Property<string>("CommentText")
                        .HasColumnType("text")
                        .HasColumnName("commentText");

                    b.Property<int?>("ContributionId")
                        .HasColumnType("int")
                        .HasColumnName("contributionId");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Comments__3213E83FD20A86B9");

                    b.HasIndex("ContributionId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Manage_System.models.Contribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastModifiedDate");

                    b.Property<int?>("MagazineId")
                        .HasColumnType("int")
                        .HasColumnName("magazineId");

                    b.Property<bool?>("Publics")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("publics");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text")
                        .HasColumnName("shortDescription");

                    b.Property<bool?>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("submissionDate");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Contribu__3213E83F4A1504BF");

                    b.HasIndex("MagazineId");

                    b.HasIndex("UserId");

                    b.ToTable("Contributions");
                });

            modelBuilder.Entity("Manage_System.models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Salary")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("Manage_System.models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Facultie__3213E83FA3774240");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Manage_System.models.ImgFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContributionId")
                        .HasColumnType("int")
                        .HasColumnName("contributionId");

                    b.Property<string>("Stype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("stype");

                    b.Property<string>("Url")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PK__imgFile__3213E83F67F825DA");

                    b.HasIndex("ContributionId");

                    b.ToTable("imgFile", (string)null);
                });

            modelBuilder.Entity("Manage_System.models.Magazine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CloseYear")
                        .HasColumnType("date")
                        .HasColumnName("closeYear");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("StartYear")
                        .HasColumnType("date")
                        .HasColumnName("startYear");

                    b.HasKey("Id")
                        .HasName("PK__Magazine__3213E83FD5FB45EE");

                    b.ToTable("Magazine", (string)null);
                });

            modelBuilder.Entity("Manage_System.models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3213E83F752E2C11");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Manage_System.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("avatar");

                    b.Property<DateTime?>("CreateDay")
                        .HasColumnType("datetime")
                        .HasColumnName("createDay");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("facultyId");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fullName");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Users__3213E83F56046F46");

                    b.HasIndex("FacultyId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Manage_System.models.Comment", b =>
                {
                    b.HasOne("Manage_System.models.Contribution", "Contribution")
                        .WithMany("Comments")
                        .HasForeignKey("ContributionId")
                        .HasConstraintName("FK__Comments__contri__5629CD9C");

                    b.HasOne("Manage_System.models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comments__userId__571DF1D5");

                    b.Navigation("Contribution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Manage_System.models.Contribution", b =>
                {
                    b.HasOne("Manage_System.models.Magazine", "Magazine")
                        .WithMany("Contributions")
                        .HasForeignKey("MagazineId")
                        .HasConstraintName("FK__Contribut__magaz__5812160E");

                    b.HasOne("Manage_System.models.User", "User")
                        .WithMany("Contributions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Contribut__userI__59063A47");

                    b.Navigation("Magazine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Manage_System.models.ImgFile", b =>
                {
                    b.HasOne("Manage_System.models.Contribution", "Contribution")
                        .WithMany("ImgFiles")
                        .HasForeignKey("ContributionId")
                        .HasConstraintName("FK__imgFile__contrib__59FA5E80");

                    b.Navigation("Contribution");
                });

            modelBuilder.Entity("Manage_System.models.User", b =>
                {
                    b.HasOne("Manage_System.models.Faculty", "Faculty")
                        .WithMany("Users")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK__Users__facultyId__5AEE82B9");

                    b.HasOne("Manage_System.models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__roleId__5BE2A6F2");

                    b.Navigation("Faculty");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Manage_System.models.Contribution", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("ImgFiles");
                });

            modelBuilder.Entity("Manage_System.models.Faculty", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Manage_System.models.Magazine", b =>
                {
                    b.Navigation("Contributions");
                });

            modelBuilder.Entity("Manage_System.models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Manage_System.models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Contributions");
                });
#pragma warning restore 612, 618
        }
    }
}

    @model IEnumerable< Manage_System.models.Contribution>

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Login Success Modal -->
<div class="modal fade" id="loginSuccessModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Login Successful</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @TempData["TextLogin"]
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<h5>Student</h5>

<div class="row">
    <div class="col-md-6 col-lg-4">
        <div class="card">
            <div class="card-body">
                <div class="media align-items-center">
                    <div class="avatar avatar-icon avatar-lg avatar-blue">
                        <i class="anticon anticon-profile"></i>
                    </div>
                    <div class="m-l-15">
                        <h2 class="m-b-0">@ViewBag.contri</h2>
                        <p class="m-b-0 text-muted">Contribution</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-4">
        <div class="card">
            <div class="card-body">
                <div class="media align-items-center">
                    <div class="avatar avatar-icon avatar-lg avatar-cyan">
                        <i class="anticon anticon-file"></i>
                    </div>
                    <div class="m-l-15">
                        <h2 class="m-b-0">@ViewBag.totalFile</h2>
                        <p class="m-b-0 text-muted">File</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-4">
        <div class="card">
            <div class="card-body">
                <div class="media align-items-center">
                    <div class="avatar avatar-icon avatar-lg avatar-cyan">
                        
                        <i class="anticon anticon-message"></i>
                    </div>
                    <div class="m-l-15">
                        <h2 class="m-b-0">@ViewBag.totalcomment</h2>
                        <p class="m-b-0 text-muted">Comment</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="card col-lg-6">
        <div class="card-body">
            <div style="text-align:center">
                <canvas id="myChart"></canvas>
            </div>

        </div>
    </div>
    <div class="card col-lg-6">
        <div class="card-body">
            <div style="text-align:center">
                <canvas id="fileChart"></canvas>
            </div>

        </div>
    </div>

</div>


@foreach (var blog in Model)
{
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    @foreach (var img in blog.ImgFiles.Select((value, index) => new { value, index }))
                    {
                        if (img.value.Stype == "Img")
                        {
                            <img class="img-fluid" src="~/Uploads/@img.value.Url" alt="">
                            break;
                        }
                    }

                </div>
                <div class="col-md-8">
                    <h4 class="m-b-10">@blog.Title</h4>
                    <div class="d-flex align-items-center m-t-5 m-b-15">
                        <div class="avatar avatar-image avatar-sm">
                            @if (blog.User.Avatar != null)
                            {
                                <img src="~/uploads/@blog.User.Avatar" alt="">
                            }
                            else
                            {
                                <img src="~/images/NoImage.png" alt="">
                            }


                        </div>
                        <div class="m-l-10">
                            <span class="text-gray font-weight-semibold">@blog.User.FullName</span>
                            <span class="m-h-5 text-gray">|</span>
                            <span class="text-gray">@blog.SubmissionDate</span>
                        </div>
                    </div>
                    <p class="m-b-20">@blog.ShortDescription</p>
                    <div class="text-right">
                        <a class="btn btn-hover font-weight-semibold" asp-controller="Contributions" asp-action="Detail" asp-route-id="@blog.Id">
                            <span>Read More</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {
        var showLoginSuccess = '@TempData["ShowLoginSuccessModal"]';
        if (showLoginSuccess === 'true') {
            $('#loginSuccessModal').modal('show');
        }
    });
    </script>

    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {

            type: 'doughnut',
            data: {
                labels: ['Processing', 'Reject', 'Approved'],
                datasets: [{
                    label: 'Number of Contribution',
                    data: [@ViewBag.contriPro,
                        @ViewBag.contriReject, 
                        @ViewBag.contriApproved],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

    </script>

    <script>
        var ctx = document.getElementById('fileChart').getContext('2d');
        var myChart = new Chart(ctx, {

            type: 'pie',
            data: {
                labels: ['File', 'Img'],
                datasets: [{
                    label: 'Number of File',
                    data: [@ViewBag.totalFiledoc,
        @ViewBag.totalFileImg],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

    </script>
}
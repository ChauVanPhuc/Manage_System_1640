
@{

    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<H5>Admin</H5>
    

     
<div class="row">


<div class="card col-lg-6">
    <div class="card-body">
        <div style="text-align:center"> 
            <h6>Account Role</h6>
            <canvas id="AccountChart" ></canvas>
        </div>

    </div>
</div>

    <div class="card col-lg-6">
        <div class="card-body">
            <div style="text-align:center">
                <h6>Account Faculty</h6>
                <canvas id="productChart"></canvas>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('AccountChart').getContext('2d');
        var myChart = new Chart(ctx, {
            
            type: 'pie',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.roleName)),
                datasets: [{
                    label: 'Number of Account',
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.accountCounts)),
                backgroundColor: [
                        'rgba(255, 99, 132, 0.2)', 
                        'rgba(54, 162, 235, 0.2)', 
                        'rgba(255, 206, 86, 0.2)', 
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(153, 102, 255, 0.2)', 
                ],
                borderColor: [
                        'rgba(255, 99, 132, 1)', 
                        'rgba(54, 162, 235, 1)', 
                        'rgba(255, 206, 86, 1)', 
                        'rgba(75, 192, 192, 1)', 
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'  
                ],
                borderWidth: 1
            }]
        },
            options: {
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                let label = context.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                const total = context.dataset.data.reduce((prev, curr) => prev + curr, 0);
                                const currentValue = context.raw;
                                const percentage = Math.round((currentValue / total) * 100);
                                // Now add both the currentValue and the percentage to the label
                                label += `${currentValue} (${percentage}%)`;
                                return label;
                            }
                        }
                    },
                },
                // ... other options
            }
    });

    </script>

    <script>
        var ctx = document.getElementById('productChart').getContext('2d');
        var myChart = new Chart(ctx, {

            type: 'doughnut',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.facultyName)),
                datasets: [{
                    label: 'Number of Account',
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.facultyCounts)),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                let label = context.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                const total = context.dataset.data.reduce((prev, curr) => prev + curr, 0);
                                const currentValue = context.raw;
                                const percentage = Math.round((currentValue / total) * 100);
                                // Now add both the currentValue and the percentage to the label
                                label += `${currentValue} (${percentage}%)`;
                                return label;
                            }
                        }
                    },
                },
                // ... other options
            }
        });

    </script>
   
}
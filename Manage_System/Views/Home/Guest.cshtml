@model Manage_System.ModelViews.GuesModelDisplay

@{

    Layout = "~/Views/Shared/_LayoutGuest.cshtml";
}


<div class="page-header">
    <div class="header-sub-title">
        <nav class="breadcrumb breadcrumb-dash">
            <span href="#" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>Home</span>
            <a class="breadcrumb-item">Contributions</a>
        </nav>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <form>
            <label class="visually-hidden" for="magazineId">Magazine</label>
            <div class="row">
            <div class="form-group col-lg-4">
            <div>
               
                <select class="form-control"  id="magazineId" name="magazineId">
                    <option>Choose Magazines</option>
                        @foreach (var genre in Model.Magazines)
                        {                            
                            <option selected="@(genre.Id == Model.magazineId)" value="@genre.Id">@genre.Description @* @genre.ClosureDay.Value.ToString("yyyy") *@</option>
                        }
                </select>
                
            </div>

        </div>

         <div class="col-2">
            <button type="submit" asp-controller="Home" asp-action="Guest" class="btn btn-primary"><i class="anticon anticon-search"></i></button>
        </div>
        </div>
        </form>
        
        <div class="card col-lg-6">
            <div class="card-body">
                <div style="text-align:center">
                    <h6>Contributions</h6>
                    <canvas id="ContributionsChart"></canvas>
                </div>

            </div>
        </div>

        <div class="container">

            @foreach (var item in Model.Contributions)
            {
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                @foreach (var img in item.ImgFiles.Select((value, index) => new { value, index }))
                                {
                                    if (img.value.Stype == "Img")
                                    {
                                        <img class="img-fluid" src="~/Uploads/@img.value.Url" alt="">
                                        break;
                                    }
                                }

                            </div>
                            <div class="col-md-8">
                                <h4 class="m-b-10">@item.Title</h4>
                                <div class="d-flex align-items-center m-t-5 m-b-15">
                                    <div class="avatar avatar-image avatar-sm">
                                        @if (item.User.Avatar != null)
                                        {
                                            <img src="~/uploads/@item.User.Avatar" alt="">
                                        }
                                        else
                                        {
                                            <img src="~/images/NoImage.png" alt="">
                                        }


                                    </div>
                                    <div class="m-l-10">
                                        <span class="text-gray font-weight-semibold">@item.User.FullName</span>
                                        <span class="m-h-5 text-gray">|</span>
                                        <span class="text-gray">@item.SubmissionDate</span>
                                    </div>
                                </div>
                                <p class="m-b-20">@item.ShortDescription</p>
                                <div class="text-right">
                                    <a class="btn btn-hover font-weight-semibold" asp-controller="Home" asp-action="ContriDetail" asp-route-id="@item.Id">
                                        <span>Read More</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
        @* <div class="m-t-30">
            <nav>
                <ul class="pagination justify-content-center">
                    <li class="page-item"><a class="page-link" href="#">Previous</a></li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item"><a class="page-link" href="#">Next</a></li>
                </ul>
            </nav>
        </div> *@

    </div>
</div>
@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('ContributionsChart').getContext('2d');
        var myChart = new Chart(ctx, {

            type: 'pie',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.facultyName)),
                datasets: [{
                    label: 'Number of Contributions',
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.facultyCounts)),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

    </script>
}